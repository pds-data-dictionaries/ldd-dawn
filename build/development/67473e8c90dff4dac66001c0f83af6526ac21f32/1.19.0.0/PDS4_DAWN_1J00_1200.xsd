<?xml version="1.0" encoding="UTF-8"?>
  <!-- PDS4 XML/Schema for Name Space Id:dawn  Version:1.2.0.0 - Mon Jun 02 17:42:58 UTC 2025 -->
  <!-- Generated from the PDS4 Information Model Version 1.19.0.0 - System Build 13.0 -->
  <!-- *** This PDS4 product schema is an operational deliverable. *** -->
  <!--                                                                           -->
  <!--               Dictionary Stack                                            -->
  <!-- 1.19.0.0 - pds: - Common Dictionary                                       -->
  <!-- 1.2.0.0 - dawn: - Dawn                                                    -->
  <!--                                                                           -->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://pds.nasa.gov/pds4/mission/dawn/v1"
    xmlns:dawn="http://pds.nasa.gov/pds4/mission/dawn/v1"
    xmlns:pds="http://pds.nasa.gov/pds4/pds/v1"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    version="1.2.0.0">
 
    <xs:import namespace="http://pds.nasa.gov/pds4/pds/v1" schemaLocation="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1J00.xsd"/>
 
  <xs:annotation>
    <xs:documentation>
 
      v1.0.0.0  2018-11-14
		-  Created PDS4 LDD based on PDS3 Catalog file content.
      v1.1.0.0  2020-07-23
		-  Added support for GRaND instrument
      v1.2.0.0  2022-10-26
        -  Fixed errors reported by LDDTool
        -  Organized VIR attributes into sub-classes where appropriate
		
		
	
    </xs:documentation>
  </xs:annotation>
 
  <xs:element name="Dawn" type="dawn:Dawn"> </xs:element>
  <xs:element name="GRaND" type="dawn:GRaND"> </xs:element>

  <xs:complexType name="Dawn">
    <xs:annotation>
      <xs:documentation>The Dawn class is the container for Dawn
        mission-specific metadata elements. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="mission_phase_name" type="dawn:mission_phase_name" minOccurs="0" maxOccurs="unbounded"> </xs:element>
      <xs:element name="spacecraft_clock_start_count" type="dawn:spacecraft_clock_start_count" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="spacecraft_clock_stop_count" type="dawn:spacecraft_clock_stop_count" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="standard_data_product_id" nillable="true" type="dawn:standard_data_product_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="FC" type="dawn:FC" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="VIR" type="dawn:VIR" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element ref="dawn:GRaND" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="dawn:mission_phase_name = ('CERES ENCOUNTER', 'CERES EXTENDED GRAND (CXG)', 'CERES EXTENDED JULING (CXJ)', 'CERES EXTENDED LAMO (CXL)', 'CERES EXTENDED MISSION', 'CERES EXTENDED OPPOSITION (CXO)', 'CERES SCIENCE APPROACH (CSA)', 'CERES SCIENCE HAMO (CSH)', 'CERES SCIENCE LAMO (CSL)', 'CERES SCIENCE RC3 (CSR)', 'CERES SCIENCE SURVEY (CSS)', 'CERES TRANSFER TO GRAND (CTG)', 'CERES TRANSFER TO HAMO (CTH)', 'CERES TRANSFER TO JULING (CTJ)', 'CERES TRANSFER TO LAMO (CTL)', 'CERES TRANSFER TO OPPOSITION (CTO)', 'CERES TRANSFER TO SURVEY (CTS)', 'EARTH-MARS CRUISE (EMC)', 'END OF CERES EXTENDED MISSION', 'END OF PRIME MISSION', 'INITIAL CHECKOUT (ICO)', 'Launch', 'MARS GRAVITY ASSIST (MGA)', 'MARS-VESTA CRUISE (MVC)', 'VESTA ENCOUNTER', 'VESTA SCIENCE APPROACH (VSA)', 'VESTA SCIENCE HAMO (VSH)', 'VESTA SCIENCE HAMO 2 (VH2)', 'VESTA SCIENCE LAMO (VSL)', 'VESTA SCIENCE SURVEY (VSS)', 'VESTA TRANSFER TO CERES (VTC)', 'VESTA TRANSFER TO HAMO (VTH)', 'VESTA TRANSFER TO HAMO 2 (VT2)', 'VESTA TRANSFER TO LAMO (VTL)', 'VESTA-CERES CRUISE (VCC)')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="FC">
    <xs:annotation>
      <xs:documentation>The Dawn "FC" class is the container for Dawn
        Framing Camera (FC) specific metadata elements.
        </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="callamp_delay_time" type="dawn:callamp_delay_time" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="callamp_duty" type="dawn:callamp_duty" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="callamp_enable_flag" type="dawn:callamp_enable_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="callamp_frequency" type="dawn:callamp_frequency" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="callamp_strobe_time" type="dawn:callamp_strobe_time" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="chamber" type="dawn:chamber" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="data_routing_id" type="dawn:data_routing_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="dpu_hardware_id" type="dawn:dpu_hardware_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="dpu_software_version" type="dawn:dpu_software_version" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="fee_flag" type="dawn:fee_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="fee_hardware_id" type="dawn:fee_hardware_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="filter_encoder" type="dawn:filter_encoder" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="front_door_status_id" type="dawn:front_door_status_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="front_door_encoder" type="dawn:front_door_encoder" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="fsa_shoot_enable_flag" type="dawn:fsa_shoot_enable_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="fsa_shoot_flag" type="dawn:fsa_shoot_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="heater0_flag" type="dawn:heater0_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="heater1_flag" type="dawn:heater1_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="image_acquire_mode" type="dawn:image_acquire_mode" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_12" type="dawn:i_12" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_16" type="dawn:i_16" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_28" type="dawn:i_28" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_2_5" type="dawn:i_2_5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_3_3" type="dawn:i_3_3" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_5" type="dawn:i_5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_5_analog" type="dawn:i_5_analog" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_m5" type="dawn:i_m5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="i_m5_analog" type="dawn:i_m5_analog" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="mcu_flag" type="dawn:mcu_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="mcu_hardware_id" type="dawn:mcu_hardware_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="mcu_motor_flag" type="dawn:mcu_motor_flag" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="operator" type="dawn:operator" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="pcu_hardware_id" type="dawn:pcu_hardware_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="purpose" type="dawn:purpose" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="subject" type="dawn:subject" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="target" type="dawn:target" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="test_lamp" type="dawn:test_lamp" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_baffle" type="dawn:t_baffle" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_ccd" type="dawn:t_ccd" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_cover_motor" type="dawn:t_cover_motor" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_csc" type="dawn:t_csc" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_dcdc" type="dawn:t_dcdc" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_dpu" type="dawn:t_dpu" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_f12" type="dawn:t_f12" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_filter_motor" type="dawn:t_filter_motor" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_lens_barrel" type="dawn:t_lens_barrel" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_rad_motor" type="dawn:t_rad_motor" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="t_structure" type="dawn:t_structure" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="udplib_software_version" type="dawn:udplib_software_version" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="use_pre_clear" type="dawn:use_pre_clear" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_12" type="dawn:v_12" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_16" type="dawn:v_16" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_28" type="dawn:v_28" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_2_5" type="dawn:v_2_5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_3_3" type="dawn:v_3_3" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_5" type="dawn:v_5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_5_analog" type="dawn:v_5_analog" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_m5" type="dawn:v_m5" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="v_m5_analog" type="dawn:v_m5_analog" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="alt_start_time" type="dawn:alt_start_time" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="alt_stop_time" type="dawn:alt_stop_time" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="dawn:callamp_enable_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:data_routing_id = ('Op-Nav', 'Science 1', 'Science 2', 'Science 3', 'Science 4')"/> -->
    <!-- <xs:assert test=")"/> -->
    <!-- <xs:assert test="dawn:fee_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:fee_hardware_id = ('017.09.09', '017.10.10', '063.15.15')"/> -->
    <!-- <xs:assert test="dawn:front_door_status_id = ('CLOSED', 'OPEN')"/> -->
    <!-- <xs:assert test="dawn:fsa_shoot_enable_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:fsa_shoot_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:heater0_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:heater1_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:image_acquire_mode = ('DARK', 'FLATFIELD', 'NORMAL', 'SERIAL', 'STORAGE', 'TEST_CH')"/> -->
    <!-- <xs:assert test="dawn:mcu_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:mcu_hardware_id = ('10', '12')"/> -->
    <!-- <xs:assert test="dawn:mcu_motor_flag = ('OFF', 'ON')"/> -->
    <!-- <xs:assert test="dawn:pcu_hardware_id = ('2.04', '3.05')"/> -->
    <!-- <xs:assert test="dawn:use_pre_clear = ('OFF', 'ON')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="Frame_Parameters">
    <xs:annotation>
      <xs:documentation>The Frame_Parameters class contains attributes
        describing the acquisition of the VIR frames.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="exposure_duration" type="dawn:exposure_duration" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="frame_summing" type="dawn:frame_summing" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="external_repetition_time" type="dawn:external_repetition_time" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="dark_acquisition_rate" type="dawn:dark_acquisition_rate" minOccurs="1" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GRaND">
    <xs:annotation>
<xs:documentation>GRaND parameters</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="pds:Local_Internal_Reference" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="TELREADOUT_List" type="dawn:TELREADOUT_List" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="TELSOH_List" type="dawn:TELSOH_List" minOccurs="1" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Scan_Parameters">
    <xs:annotation>
      <xs:documentation>The Scan_Parameters class contains attributes
        describing the activity of the VIR scan
        mirror.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="scan_start_angle" type="dawn:scan_start_angle" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="scan_stop_angle" type="dawn:scan_stop_angle" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="scan_step_angle" type="dawn:scan_step_angle" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="scan_step_number" type="dawn:scan_step_number" minOccurs="1" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TELREADOUT">
    <xs:annotation>
      <xs:documentation>A single scaler accumulation interval, and the
        first and last records and SCLKs for which the interval was in
        effect.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="grand_start_sclk" type="dawn:grand_start_sclk" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="grand_stop_sclk" type="dawn:grand_stop_sclk" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="grand_interval" nillable="true" type="dawn:grand_interval" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="comment" nillable="true" type="dawn:comment" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TELREADOUT_List">
    <xs:annotation>
      <xs:documentation>A list of scaler accumulation intervals, along
        with the records for which they were in
        effect.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TELREADOUT" type="dawn:TELREADOUT" minOccurs="1" maxOccurs="unbounded"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TELSOH">
    <xs:annotation>
      <xs:documentation>A single state-of-health accumulation interval,
        and the first and last records and SCLKs for which the interval
        was in effect.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="grand_start_sclk" type="dawn:grand_start_sclk" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="grand_stop_sclk" type="dawn:grand_stop_sclk" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="grand_interval" nillable="true" type="dawn:grand_interval" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="comment" nillable="true" type="dawn:comment" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TELSOH_List">
    <xs:annotation>
      <xs:documentation>A list of state-of-health accumulation
        intervals, along with the records for which they were in
        effect.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TELSOH" type="dawn:TELSOH" minOccurs="1" maxOccurs="unbounded"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VIR">
    <xs:annotation>
      <xs:documentation>The Dawn "VIR" class is the container for Dawn
        Visual and Infrared Spectrometer (VIR) specific metadata
        elements. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="vir_ir_start_x_position" type="dawn:vir_ir_start_x_position" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="vir_ir_start_y_position" type="dawn:vir_ir_start_y_position" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="vir_vis_start_x_position" type="dawn:vir_vis_start_x_position" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="vir_vis_start_y_position" type="dawn:vir_vis_start_y_position" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="VIR_Operational_Parameters" type="dawn:VIR_Operational_Parameters" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="Scan_Parameters" type="dawn:Scan_Parameters" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="Frame_Parameters" type="dawn:Frame_Parameters" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test=")"/> -->
    <!-- <xs:assert test=")"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="VIR_Instrument_Temperatures">
    <xs:annotation>
      <xs:documentation>The VIR_Instrument_Temperatures class contains
        attributes which identify the temperature in different sections
        of the VIR instrument.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="vir_focal_plane_maximum_temperature" type="dawn:vir_focal_plane_maximum_temperature" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="vir_telescope_maximum_temperature" type="dawn:vir_telescope_maximum_temperature" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="vir_spectrometer_maximum_temperature" type="dawn:vir_spectrometer_maximum_temperature" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="vir_cryocooler_maximum_temperature" type="dawn:vir_cryocooler_maximum_temperature" minOccurs="1" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VIR_Operational_Parameters">
    <xs:annotation>
      <xs:documentation>The VIR_Operational_Parameters contains
        attributes related to VIR operating mode information, data
        quality and other similar metadata.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="data_quality_id" type="dawn:data_quality_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="telemetry_source_id" type="dawn:telemetry_source_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="channel_id" type="dawn:channel_id" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="software_version_id" type="dawn:software_version_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="instrument_mode_id" type="dawn:instrument_mode_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="scan_mode_id" type="dawn:scan_mode_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="comment" type="pds:comment" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="dawn:data_quality_id = ('0', '1')"/> -->
    <!-- <xs:assert test="dawn:channel_id = ('IR', 'VIS')"/> -->
    <!-- <xs:assert test="dawn:instrument_mode_id = ('C_H_SPE_H_SPA_F', 'C_H_SPE_H_SPA_Q', 'C_H_SPE_L_SPA_F', 'C_L_SPE_H_SPA_F', 'C_L_SPE_H_SPA_Q', 'C_L_SPE_L_SPA_F', 'SPARE', 'S_H_SPE_H_SPA_F', 'S_H_SPE_H_SPA_Q', 'S_H_SPE_L_SPA_F', 'S_H_SPE_L_SPA_F_MEA', 'S_H_SPE_L_SPA_F_SUM', 'S_L_SPE_H_SPA_F', 'S_L_SPE_H_SPA_Q', 'S_L_SPE_L_SPA_F', 'S_L_SPE_L_SPA_F_MEA', 'S_L_SPE_L_SPA_F_SUM')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

    <xs:annotation>
      <xs:documentation>This section contains the simpleTypes that provide more constraints
        than those at the base data type level. The simpleTypes defined here build on the base data
        types. This is another component of the common dictionary and therefore falls within the
        common namespace.
      </xs:documentation>
    </xs:annotation>

  <xs:simpleType name="alt_start_time">
    <xs:annotation>
      <xs:documentation>The same time as the start_date_time attribute
        expressed year/day-of-year rather than
        year/month/day.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Date_Time_DOY_UTC">
  <!-- format="YYYY-DOYTHH:MM:SS.SSSSSSZ" -->
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="alt_stop_time">
    <xs:annotation>
      <xs:documentation>The same time as the stop_date_time attribute
        expressed year/day-of-year rather than
        year/month/day.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Date_Time_DOY_UTC">
  <!-- format="YYYY-DOYTHH:MM:SS.SSSSSSZ" -->
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="callamp_delay_time">
    <xs:annotation>
      <xs:documentation>Callamp switch on delay measured in microseconds
        after START_TIME. Callamp can be switched on before (less than
        193000 µs), at (= 193000 µs), or after (greater than 193000 µs)
        begin of exposure. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="10000000"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="callamp_duty">
    <xs:annotation>
      <xs:documentation>The callamp can be run at various duty cycles
        between 0.0 % and 100.0 % by using only every other pulse of the
        callamp frequency to trigger the callamp. DAWN_CALLAMP_DUTY =
        CALLAMP_FREQUENCY / Value * 100 % Example: Value = 1.0 :
        DAWN_CALLAMP_DUTY = 100 % Value = 2.5 : DAWN_CALLAMP_DUTY = 40 %
        This calculation is done internally in the camera, the user
        commands the requensted duty cycle in
        percentage.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="0.0"/>
     <xs:maxInclusive value="100.0"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="callamp_enable_flag">
    <xs:annotation>
      <xs:documentation>Indicates if callamp is enabled or disabled
        during image acquisition.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="callamp_frequency">
    <xs:annotation>
      <xs:documentation>The callamp frequency is determined by the
        internal 24 MHz clock and an integer divisor. CALLAMP_FREQUENCY
        = 24 MHz / Value The standard callamp frequency is 100 kHz
        (24MHz / 240).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="0.0"/>
     <xs:maxInclusive value="250.0"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="callamp_strobe_time">
    <xs:annotation>
      <xs:documentation>Callamp strobe time is measured in microseconds
        after callamp switch on. callamp switch off time = START_TIME +
        DAWN_CALLAMP_DELAY_TIME +
        DAWN_CALLAMP_STROBE_TIME</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="10000000"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="chamber">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        describe the test environment.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="channel_id">
    <xs:annotation>
      <xs:documentation>The channel_id identifies the instrument channel
        producing the data.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="comment">
    <xs:annotation>
      <xs:documentation>Remarks about the containing
        object.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="pds:ASCII_Short_String_Preserved">
        <xs:attribute name="nilReason" type="pds:nil_reason" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="dark_acquisition_rate">
    <xs:annotation>
      <xs:documentation>The dar_acquisition_rate attribute is the number
        of frames acquired between two background
        measurements.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="-9223372036854775808"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="data_quality_id">
    <xs:annotation>
      <xs:documentation>The data_quality_id is an indicator of whether
        data files is complete or if there are missing
        lines.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="-9223372036854775808"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="data_routing_id">
    <xs:annotation>
      <xs:documentation>This keyword describes the priority of the
        acquired image and thus how it was handled on
        board.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dpu_hardware_id">
    <xs:annotation>
      <xs:documentation>Both DPUs for FC1 and FC2 have the same DPU ID
        because they are identical.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dpu_software_version">
    <xs:annotation>
      <xs:documentation>Current version of the FC onboard
        software</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="exposure_duration_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="exposure_duration">
    <xs:annotation>
      <xs:documentation>The exposure_duration attribute is the
        integration time expressed in milliseconds. It is the exposure
        time of elementary exposures when summing is
        performed.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:exposure_duration_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Time" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="external_repetition_time_WO_Units">
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="-9223372036854775808"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="external_repetition_time">
    <xs:annotation>
      <xs:documentation>The external_repetition_time attribute is the
        time required for a frame acqusition cycle (> exposure_duration
        * frame_summing).</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:external_repetition_time_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Time" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="fee_flag">
    <xs:annotation>
      <xs:documentation>OFF = FEE is disabled, images cannot be acquired
        ON = FEE is enabled, images can be acquired</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fee_hardware_id">
    <xs:annotation>
      <xs:documentation>The fee_hardware_id attribute indicates the
        identifer associated with each Framing Camera.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="filter_encoder">
    <xs:annotation>
      <xs:documentation>FILTER_NUMBER = (((64 + 4 + encoderOnClearFilter
        - FILTER_ENCODER) / 8) MOD 8) + 1 encoderOnClearFilter is a
        hardware-dependent constant filterEncoder is the current readout
        of the encoder filterNumber return a value in the range [1..8].
        All the operation are integer operations, MOD represents modulo
        and / is the integer division. The subtraction is negative (F1 -
        Fx) because the encoder value decreases with increasing filter
        number.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="63"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="frame_summing">
    <xs:annotation>
      <xs:documentation>The frame_summing attribute is the number of
        elementary exposures when summing is
        performed.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="-9223372036854775808"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="front_door_encoder">
    <xs:annotation>
      <xs:documentation>The Front Door is closed if FRONT_DOOR_ENCODER
        shows the nominal value +/- 1 and otherwise is
        open.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="63"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="front_door_status_id">
    <xs:annotation>
      <xs:documentation>The front_door_status_id attribute indicates the
        status of the Front Door, covering the camera aperture, when the
        image was acquired. In the case of windowed images, this value
        is the same for all the subframes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fsa_shoot_enable_flag">
    <xs:annotation>
      <xs:documentation>The fsa_shoot_enable_flag attribute determines
        if the Fail Safe Actuator is enabled. For saftey safety reasons,
        the FSA requires two switches to be active at the same time in
        order to be active. One of them alone will have no
        effect.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fsa_shoot_flag">
    <xs:annotation>
      <xs:documentation>The fsa_shoot_flag attribute determines if the
        Fail-Safe Actuator is active.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="grand_interval_WO_Units">
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="1"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="grand_interval">
    <xs:annotation>
<xs:documentation>The duration of the interval.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:grand_interval_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Time" use="required" />
        <xs:attribute name="nilReason" type="pds:nil_reason" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="grand_start_sclk">
    <xs:annotation>
      <xs:documentation>The first SCLK for which this readout is
        applicable</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="1"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="grand_stop_sclk">
    <xs:annotation>
      <xs:documentation>The last SCLK for which this readout is
        applicable</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="1"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="heater0_flag">
    <xs:annotation>
      <xs:documentation>The heater0_flag attribute indicates status of
        the Camera Head Heater. The heater produces 4.4 W (5.6 Ohm at +5
        V).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="heater1_flag">
    <xs:annotation>
      <xs:documentation>The heater1_flag attribute indicates the status
        of the Baffle Heater. The heater produces 1.0 W (26 Ohm at +5
        V)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="i_12_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_12">
    <xs:annotation>
      <xs:documentation>Name: C12FEE Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: 0.02 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_12 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 50 mA Lower limit
        yellow: 60 mA Upper limit yellow: 100 mA Upper limit red: 200
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_12_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_16_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_16">
    <xs:annotation>
      <xs:documentation>Name: C16V15 Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: 0.009 Offset:
        0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_16 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 20 mA Lower limit
        yellow: 30 mA Upper limit yellow: 60 mA Upper limit red: 100
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_16_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_28_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_28">
    <xs:annotation>
      <xs:documentation>Name: C28M Location: PCU H/K Sensor: MAIN +28V
        Current Monitor Sensor Type: Current Sensor Gain: 0.0016 Offset:
        0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_28 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 200 mA Lower limit
        yellow: 250 mA Upper limit yellow: 1200 mA Upper limit red: 1400
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_28_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_2_5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_2_5">
    <xs:annotation>
      <xs:documentation>Name: C2.5AN Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: 0.15 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_2_5 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 250 mA Lower limit
        yellow: 300 mA Upper limit yellow: 900 mA Upper limit red: 1000
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_2_5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_3_3_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_3_3">
    <xs:annotation>
      <xs:documentation>Name: C3.3AN Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: 0.15 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_3_3 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 100 mA Lower limit
        yellow: 170 mA Upper limit yellow: 850 mA Upper limit red: 1400
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_3_3_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_5">
    <xs:annotation>
      <xs:documentation>Name: C5FEE Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: 0.05 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_2_5 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 100 mA Lower limit
        yellow: 250 mA Upper limit yellow: 350 mA Upper limit red: 400
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_5_analog_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_5_analog">
    <xs:annotation>
      <xs:documentation>Name: C5AN Location: PCU H/K Sensor: PCU Current
        Monitor Sensor Type: Current Sensor Gain: 0.2 Offset: 0 Sensor
        Offset FC1: 0 Sensor Offset FC2: 0 I_5_ANALOG = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: 75 mA Lower limit
        yellow: 100 mA Upper limit yellow: 1150 mA Upper limit red: 1300
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_5_analog_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_m5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_m5">
    <xs:annotation>
      <xs:documentation>Name: C-5FEE Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: -0.015 Offset:
        0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_M5 = DN * Gain +
        Offset + Sensor Offset [mA] Lower limit red: -200 mA Lower limit
        yellow: -120 mA Upper limit yellow: -60 mA Upper limit red: -30
        mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_m5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="i_m5_analog_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="i_m5_analog">
    <xs:annotation>
      <xs:documentation>Name: C-5AN Location: PCU H/K Sensor: PCU
        Current Monitor Sensor Type: Current Sensor Gain: -0.015 Offset:
        0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 I_M5_ANALOG = DN *
        Gain + Offset + Sensor Offset [mA] Lower limit red: -100 mA
        Lower limit yellow: -60 mA Upper limit yellow: -20 mA Upper
        limit red: -10 mA</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:i_m5_analog_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Current" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="image_acquire_mode">
    <xs:annotation>
      <xs:documentation>The image_acquire_mode attribute indicates the
        FC mode setting of image acquisition.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="instrument_mode_id">
    <xs:annotation>
      <xs:documentation>The instrument_mode_id attribute identifies the
        mode that the instrument was in when the data were
        taken.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="mcu_flag">
    <xs:annotation>
      <xs:documentation>The mcu_flag attribute indicates whether the
        Mechanism Controller Unit (MCU) is powered. It is independent of
        the MCU motor power flag.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="mcu_hardware_id">
    <xs:annotation>
      <xs:documentation>The mcu_hardware_id attribute is an identifier
        indicating which FC unit is in use.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="mcu_motor_flag">
    <xs:annotation>
      <xs:documentation>The mcu_motor_flag indicates if the motors for
        the mechanisms are powered. This switch and flag are independent
        of the MCU power flag.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="mission_phase_name">
    <xs:annotation>
      <xs:documentation>The mission_phase_name attribute provides the
        mission-defined name of a mission phase.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="operator">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        indicate the responsible operator of the test.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="pcu_hardware_id">
    <xs:annotation>
      <xs:documentation>The pcu_hardware_id is an analog value showing
        the hardware ID of the Power Converter Unit (PCU). The actual
        value can jitter around the nominal.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="purpose">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        describe the purpose of the test.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scan_mode_id">
    <xs:annotation>
      <xs:documentation>The scan_mode_id is an integer in the range 0 to
        10 that identifies the VIR Scan Mirror mode. "0" means that the
        mirror was not used. The VIR scan mirror performs, when
        commanded, and angular movement around an axis parallel to the
        slit direction (y direction). There can be 10 different modes,
        each one identifying a given angular movement.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="10"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scan_start_angle_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="scan_start_angle">
    <xs:annotation>
      <xs:documentation>The scan_start_angle attribute indicates the
        start position of the VIR scan mirror.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:scan_start_angle_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Angle" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="scan_step_angle_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="scan_step_angle">
    <xs:annotation>
      <xs:documentation>The scan_step_angle attribute indicates the size
        of each step of the VIR scan mirror.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:scan_step_angle_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Angle" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="scan_step_number">
    <xs:annotation>
      <xs:documentation>The scan_step_number attribute indicates the
        number of acquisitions performed within a single VIR scan mirror
        unit position.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="-9223372036854775808"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scan_stop_angle_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="scan_stop_angle">
    <xs:annotation>
      <xs:documentation>The scan_stop_angle attribute indicates the stop
        position of the VIR scan mirror.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:scan_stop_angle_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Angle" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="software_version_id">
    <xs:annotation>
      <xs:documentation>The software_version_id attribute identifies the
        software used to write the labels and format the
        data.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spacecraft_clock_start_count">
    <xs:annotation>
      <xs:documentation>The spacecraft_clock_start_count attribute
        provides the value of the spacecraft clock at the beginning of a
        time period of interest. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
    	<xs:pattern value='[1-9]/[0-9]{9}(.[0-9]{3})?'/>
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spacecraft_clock_stop_count">
    <xs:annotation>
      <xs:documentation>The spacecraft_clock_stop_count attribute
        provides the value of the spacecraft clock at the beginning of a
        time period of interest. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
    	<xs:pattern value='[1-9]/[0-9]{9}(.[0-9]{3})?'/>
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="standard_data_product_id">
    <xs:annotation>
      <xs:documentation>The standard_data_product_id keyword is used to
        identify data products of the same processing level that are not
        otherwise indentified by being in different collections within
        the bundle.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="pds:ASCII_Short_String_Collapsed">
        <xs:attribute name="nilReason" type="pds:nil_reason" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="subject">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        describe the subject used during the test.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="t_baffle_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_baffle">
    <xs:annotation>
      <xs:documentation>Name: TBF Location: Baffle H/K Sensor: Baffle
        Thermistor Sensor Type: AD590 Gain: 0.9975 Offset: -129.5 Sensor
        Offset FC1: -2.1 Sensor Offset FC2: -3.1 T_BAFFLE = DN * Gain +
        Offset + Sensor Offset + 273.150 [deg C] T_BAFFLE = DN * Gain +
        Offset + Sensor Offset [Kelvin] Lower limit red: -55.0 deg C
        Lower limit yellow: -50.0 deg C Upper limit yellow: +40.0 deg C
        Upper limit red: +45.0 deg C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_baffle_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_ccd_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_ccd">
    <xs:annotation>
      <xs:documentation>Name: HK-Tccd Location: DPU H/K Sensor: FEE CCD
        Thermistor Sensor Type: AD590 Gain: 0.0373 Offset: -273 Sensor
        Offset FC1: -5.240 Sensor Offset FC2: -3.960 T_CCD = DN * Gain +
        Offset + Sensor Offset [deg C] T_CCD = DN * Gain + Offset +
        Sensor Offset + 273.150 [Kelvin] The CCD is passively cooled,
        the CCD-heaters are for non-operation mode only. Lower limit
        red: -95.0 deg C Lower limit yellow: -75.0 deg C Upper limit
        yellow: +35.0 deg C Upper limit red: +40.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_ccd_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_cover_motor_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_cover_motor">
    <xs:annotation>
      <xs:documentation>Name: TCM Location: Front Door H/K Sensor: FD
        Motor Thermistor Sensor Type: AD590 Gain: 0.9975 Offset: -129.5
        Sensor Offset FC1: -2.1 Sensor Offset FC2: -1.1 T_COVER_MOTOR =
        DN * Gain + Offset + Sensor Offset [deg C] T_COVER_MOTOR = DN *
        Gain + Offset + Sensor Offset + 273.150 [Kelvin] Lower limit
        red: -55.0 deg C Lower limit yellow: -50.0 deg C Upper limit
        yellow: +50.0 deg C Upper limit red: +60.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_cover_motor_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_csc_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_csc">
    <xs:annotation>
      <xs:documentation>Name: HK-Tpcu3 Location: PCU H/K Sensor: PCU
        Board Thermistor 1 (PCU Center Screw Thermistor) Sensor Type:
        AD590 Gain: 0.0373 Offset: -273 Sensor Offset FC1: -3.210 Sensor
        Offset FC2: -3.210 T_CSC = DN * Gain + Offset + Sensor Offset
        [deg C] T_CSC = DN * Gain + Offset + Sensor Offset + 273.150
        [Kelvin] The CCD is passively cooled, the CCD-heaters are for
        non-operation mode only. Lower limit red: -40.0 deg C Lower
        limit yellow: -35.0 deg C Upper limit yellow: +70.0 deg C Upper
        limit red: +80.0 deg C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_csc_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_dcdc_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_dcdc">
    <xs:annotation>
      <xs:documentation>Name: HK-Tpcu1 Location: PCU H/K Sensor: PCU
        Converter Board Thermistor Sensor Type: AD590 Gain: 0.0373
        Offset: -273 Sensor Offset FC1: -1.980 Sensor Offset FC2: -1.980
        T_DCDC = DN * Gain + Offset + Sensor Offset [deg C] T_DCDC = DN
        * Gain + Offset + Sensor Offset + 273.150 [Kelvin] Lower limit
        red: -40.0 deg C Lower limit yellow: -35.0 deg C Upper limit
        yellow: +70.0 deg C Upper limit red: +80.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_dcdc_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_dpu_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_dpu">
    <xs:annotation>
      <xs:documentation>Name: HK-Tdpu Location: DPU H/K Sensor: DPU
        Board Thermistor Sensor Type: AD590 Gain: 0.0373 Offset: -273
        Sensor Offset FC1: -7.960 Sensor Offset FC2: -3.960 T_DPU = DN *
        Gain + Offset + Sensor Offset [deg C] T_DPU = DN * Gain + Offset
        + Sensor Offset + 273.150 [Kelvin] Lower limit red: -40.0 deg C
        Lower limit yellow: -35.0 deg C Upper limit yellow: +80.0 deg C
        Upper limit red: +90.0 deg C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_dpu_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_f12_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_f12">
    <xs:annotation>
      <xs:documentation>Name: HK-Tpcu2 Location: PCU H/K Sensor: PCU
        Board Thermistor 1 (PCU FEE 12 V I/F Thermistor) Sensor Type:
        AD590 Gain: 0.0373 Offset: -273 Sensor Offset FC1: -2.580 Sensor
        Offset FC2: -2.580 T_F12 = DN * Gain + Offset + Sensor Offset
        [deg C] T_F12 = DN * Gain + Offset + Sensor Offset + 273.150
        [Kelvin] Lower limit red: -40.0 deg C Lower limit yellow: -35.0
        deg C Upper limit yellow: +70.0 deg C Upper limit red: +80.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_f12_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_filter_motor_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_filter_motor">
    <xs:annotation>
      <xs:documentation>Name: TFM Location: Filter Wheel H/K Sensor:
        Filter Motor Thermistor Sensor Type: AD590 Gain: 0.9975 Offset:
        -129.5 Sensor Offset FC1: -3.1 Sensor Offset FC2: -2.1
        T_FILTER_MOTOR = DN * Gain + Offset + Sensor Offset [deg C]
        T_FILTER_MOTOR = DN * Gain + Offset\ + Sensor Offset + 273.150
        [Kelvin] Lower limit red: -55.0 deg C Lower limit yellow: -50.0
        deg C Upper limit yellow: +50.0 deg C Upper limit red: +60.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_filter_motor_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_lens_barrel_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_lens_barrel">
    <xs:annotation>
      <xs:documentation>Name: TLB Location: Lens Barrel H/K Sensor: Lens
        Barrel Thermistor Sensor Type: AD590 Gain: 0.9975 Offset: -129.5
        Sensor Offset FC1: -1.1 Sensor Offset FC2: -1.1 T_LENS_BARREL =
        DN * Gain + Offset + Sensor Offset [deg C] T_LENS_BARREL = DN *
        Gain + Offset + Sensor Offset + 273.150 [Kelvin] Lower limit
        red: -55.0 deg C Lower limit yellow: -50.0 deg C Upper limit
        yellow: +40.0 deg C Upper limit red: +45.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_lens_barrel_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_rad_motor_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_rad_motor">
    <xs:annotation>
      <xs:documentation>Name: TRD Location: Radiator H/K Sensor:
        Radiator Thermistor Sensor Type: AD590 Gain: 0.9975 Offset:
        -129.5 Sensor Offset FC1: -1.1 Sensor Offset FC2: -1.1
        T_RAD_MOTOR = DN * Gain + Offset + Sensor Offset [deg C]
        T_RAD_MOTOR = DN * Gain + Offset + Sensor Offset + 273.150
        [Kelvin] Lower limit red: -115.0 deg C Lower limit yellow: -95.0
        deg C Upper limit yellow: +35.0 deg C Upper limit red: +40.0 deg
        C Note: This is not a motor temperature!</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_rad_motor_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="t_structure_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-999.999"/>
     <xs:maxInclusive value="999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="t_structure">
    <xs:annotation>
      <xs:documentation>Name: TCS Location: Camera Head H/K Sensor: CH
        Structure Thermistor Sensor Type: AD590 Gain: 0.9975 Offset:
        -129.5 Sensor Offset FC1: -3.1 Sensor Offset FC2: -4.1
        T_STRUCTURE = DN * Gain + Offset + Sensor Offset [deg C]
        T_STRUCTURE = DN * Gain + Offset + Sensor Offset + 273.150
        [Kelvin] Lower limit red: -55.0 deg C Lower limit yellow: -50.0
        deg C Upper limit yellow: +40.0 deg C Upper limit red: +45.0 deg
        C</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:t_structure_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="target">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        describe the target the FC was pointing at during the
        test</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="telemetry_source_id">
    <xs:annotation>
      <xs:documentation>The telemetry_source_id attribute identifies the
        Electrical Ground Supporting Equipment (EGSE) used to produce
        the data file. This attribute is always set to
        "EGSE".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="test_lamp">
    <xs:annotation>
      <xs:documentation>This keyword was used during ground tests to
        define the lamp that was used during the test.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="udplib_software_version">
    <xs:annotation>
      <xs:documentation>Current version of the FC UDP
        library</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="use_pre_clear">
    <xs:annotation>
      <xs:documentation>The use_pre_clear attribute indicates whether a
        pre-clear of the CCD was performed prior to image acquisition. A
        pre-clear is performed 193 ms prior to image acquisition and
        removes all charge that is on the CCD at the time of
        execution.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="v_12_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_12">
    <xs:annotation>
      <xs:documentation>Name: V12FEE Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.0012 Offset:
        0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_12 = DN * Gain +
        Offset + Sensor Offset [V] Lower limit red: 11.0 V Lower limit
        yellow: 11.7 V Upper limit yellow: 12.5 V Upper limit red: 13.0
        V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_12_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_16_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_16">
    <xs:annotation>
      <xs:documentation>Name: V16V15 Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.000165
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_16 = DN *
        Gain + Offset + Sensor Offset [V] Lower limit red: 14.7 V Lower
        limit yellow: 15.2 V Upper limit yellow: 16.5 V Upper limit red:
        17.0 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_16_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_28_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_28">
    <xs:annotation>
      <xs:documentation>Name: V28M Location: PCU H/K Sensor: Main +28V
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.04 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_28 = DN * Gain +
        Offset + Sensor Offset [V] Lower limit red: 20.0 V Lower limit
        yellow: 21.5 V Upper limit yellow: 35.5 V Upper limit red: 37.0
        V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_28_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_2_5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_2_5">
    <xs:annotation>
      <xs:documentation>Name: V2.5AN Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.00025
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_2_5 = DN *
        Gain + Offset + Sensor Offset [V] Lower limit red: 2.1 V Lower
        limit yellow: 2.3 V Upper limit yellow: 2.8 V Upper limit red:
        3.0 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_2_5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_3_3_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_3_3">
    <xs:annotation>
      <xs:documentation>Name: V3.3AN Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.00033
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_3_3 = DN *
        Gain + Offset + Sensor Offset [V] Lower limit red: 3.0 V Lower
        limit yellow: 3.2 V Upper limit yellow: 3.7 V Upper limit red:
        3.9 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_3_3_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_5">
    <xs:annotation>
      <xs:documentation>Name: V5FEE Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: 0.00052
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_5 = DN *
        Gain + Offset + Sensor Offset [V] Lower limit red: 4.5 V Lower
        limit yellow: 4.7 V Upper limit yellow: 5.5 V Upper limit red:
        5.8 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_5_analog_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_5_analog">
    <xs:annotation>
      <xs:documentation>Name: V5AN Location: PCU H/K Sensor: PCU Voltage
        Monitor Sensor Type: Voltage Sensor Gain: 0.00052 Offset: 0
        Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_5_ANALOG = DN * Gain
        + Offset + Sensor Offset [V] Lower limit red: 4.5 V Lower limit
        yellow: 4.7 V Upper limit yellow: 5.5 V Upper limit red: 5.8
        V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_5_analog_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_m5_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_m5">
    <xs:annotation>
      <xs:documentation>Name: V-5FEE Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: -0.0005
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_M5 = DN *
        Gain + Offset + Sensor Offset [V] Lower limit red: -5.8 V Lower
        limit yellow: -5.5 V Upper limit yellow: -4.7 V Upper limit red:
        -4.5 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_m5_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="v_m5_analog_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-9999.999"/>
     <xs:maxInclusive value="9999.999"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="v_m5_analog">
    <xs:annotation>
      <xs:documentation>Name: V-5AN Location: PCU H/K Sensor: PCU
        Voltage Monitor Sensor Type: Voltage Sensor Gain: -0.0005
        Offset: 0 Sensor Offset FC1: 0 Sensor Offset FC2: 0 V_M5_ANALOG
        = DN * Gain + Offset + Sensor Offset [V] Lower limit red: -5.8 V
        Lower limit yellow: -5.5 V Upper limit yellow: -4.7 V Upper
        limit red: -4.5 V</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:v_m5_analog_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Voltage" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="vir_cryocooler_maximum_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="vir_cryocooler_maximum_temperature">
    <xs:annotation>
      <xs:documentation>The vir_cyrocooler_maximum_temperature indicates
        the maxiumum temperature on the VIR cryocooler during the VIR
        image acquisition. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:vir_cryocooler_maximum_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="vir_focal_plane_maximum_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="vir_focal_plane_maximum_temperature">
    <xs:annotation>
      <xs:documentation>The vir_focal_plane_maximum_temperature
        indicates the maxiumum temperature on the VIR focal plane during
        the VIR image acquisition. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:vir_focal_plane_maximum_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="vir_ir_start_x_position">
    <xs:annotation>
      <xs:documentation> This keyword gives the X coordinate of the
        first CCD pixel used on the IR FPA. This quantity determines the
        correspondence between wavelength and spectral
        channels.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="vir_ir_start_y_position">
    <xs:annotation>
      <xs:documentation> This keyword gives the Y coordinate of the
        first CCD pixel used on the IR FPA. This quantity determines the
        correspondence between wavelength and spectral
        channels.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="vir_spectrometer_maximum_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="vir_spectrometer_maximum_temperature">
    <xs:annotation>
      <xs:documentation>The vir_spectrometer_maximum_temperature
        indicates the maxiumum temperature on the VIR grating
        spectrometer during the VIR image acquisition.
        </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:vir_spectrometer_maximum_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="vir_telescope_maximum_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="vir_telescope_maximum_temperature">
    <xs:annotation>
      <xs:documentation>The vir_telescope_maximum_temperature indicates
        the maxiumum temperature on the VIR optical telescope during the
        VIR image acquisition. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="dawn:vir_telescope_maximum_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="vir_vis_start_x_position">
    <xs:annotation>
      <xs:documentation> This keyword gives the X coordinate of the
        first CCD pixel used on the VIS FPA. This quantity determines
        the correspondence between wavelength and spectral
        channels.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="vir_vis_start_y_position">
    <xs:annotation>
      <xs:documentation> This keyword gives the Y coordinate of the
        first CCD pixel used on the VIS FPA. This quantity determines
        the correspondence between wavelength and spectral
        channels.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>
</xs:schema>
